// Code generated by MockGen. DO NOT EDIT.
// Source: shopify/collections.go

// Package mock_shopify is a generated GoMock package.
package mockshopify

import (
	shopify "github.com/MOHC-LTD/shopify"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCollectionRepository is a mock of CollectionRepository interface
type MockCollectionRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCollectionRepositoryMockRecorder
}

// MockCollectionRepositoryMockRecorder is the mock recorder for MockCollectionRepository
type MockCollectionRepositoryMockRecorder struct {
	mock *MockCollectionRepository
}

// NewMockCollectionRepository creates a new mock instance
func NewMockCollectionRepository(ctrl *gomock.Controller) *MockCollectionRepository {
	mock := &MockCollectionRepository{ctrl: ctrl}
	mock.recorder = &MockCollectionRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCollectionRepository) EXPECT() *MockCollectionRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockCollectionRepository) Get(id int64) (shopify.Collection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(shopify.Collection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockCollectionRepositoryMockRecorder) Get(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCollectionRepository)(nil).Get), id)
}

// Products mocks base method
func (m *MockCollectionRepository) Products(id int64) (shopify.Products, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Products", id)
	ret0, _ := ret[0].(shopify.Products)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Products indicates an expected call of Products
func (mr *MockCollectionRepositoryMockRecorder) Products(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Products", reflect.TypeOf((*MockCollectionRepository)(nil).Products), id)
}
